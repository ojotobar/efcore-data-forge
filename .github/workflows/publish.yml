name: Publish NuGet Package

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on all tags like v1.0.0, v1.0.0-rc, etc.

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for completeness

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore --no-cache

      - name: Build project (Release)
        run: dotnet build --configuration Release --no-restore

      - name: Run tests
        run: dotnet test --configuration Release --no-build --verbosity normal

      - name: Extract version from tag
        run: |
          VERSION="${GITHUB_REF#refs/tags/}"
          VERSION="${VERSION#v}"
          echo "Detected version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Pack NuGet package
        working-directory: src/EFCore.CrudKit.Library
        run: |
          echo "Packing EFCore.DataForge version: $VERSION"
          dotnet pack EFCore.CrudKit.Library.csproj \
            --no-build \
            -p:Configuration=Release \
            -p:PackageId=EFCore.DataForge \
            -p:Version="$VERSION" \
            -o out

      - name: Publish to NuGet
        if: success()
        working-directory: src/EFCore.CrudKit.Library
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          echo "Publishing package(s) in out/ ..."
          dotnet nuget push out/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json --skip-duplicate