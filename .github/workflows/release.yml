name: Release on Merge

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore --no-cache

      - name: Build project
        run: dotnet build --configuration Release --no-restore

      - name: Run tests
        run: dotnet test --configuration Release --no-build --verbosity normal

      - name: Get version
        run: |
          VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" src/EFCore.CrudKit.Library/EFCore.CrudKit.Library.csproj)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Tag and push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "v$VERSION"
          git push origin "v$VERSION"

      - name: Pack NuGet package
        working-directory: src/EFCore.CrudKit.Library
        run: dotnet pack EFCore.CrudKit.Library.csproj --no-build -p:Configuration=Release -p:PackageId=EFCore.DataForge -p:Version="$VERSION" -o out

      - name: Publish to NuGet
        working-directory: src/EFCore.CrudKit.Library
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: dotnet nuget push out/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json --skip-duplicate