name: Version Bump & PR

on:
  push:
    branches:
      - development

permissions:
  contents: write
  pull-requests: write

jobs:
  version-bump:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore --no-cache

      - name: Get current version from csproj
        id: get_version
        run: |
          VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" src/EFCore.CrudKit.Library/EFCore.CrudKit.Library.csproj)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Bump version
        id: bump_version
        run: |
          FULL_VERSION="$VERSION"
          CORE_VERSION="${FULL_VERSION%%-*}"
          PRERELEASE="${FULL_VERSION#"$CORE_VERSION"}"
          PRERELEASE="${PRERELEASE#-}"
          IFS='.' read -r MAJOR MINOR PATCH <<<"$CORE_VERSION"

          if [ -z "$PRERELEASE" ] || [ "$PRERELEASE" = "$FULL_VERSION" ]; then
            PATCH=$((PATCH + 1))
            if [ "$PATCH" -gt 9 ]; then
              PATCH=0; MINOR=$((MINOR + 1))
            fi
            if [ "$MINOR" -gt 9 ]; then
              MINOR=0; MAJOR=$((MAJOR + 1))
            fi
            NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
          else
            PR_LABEL="${PRERELEASE%%.*}"
            PR_NUM="${PRERELEASE#"$PR_LABEL."}"
            [[ "$PR_NUM" =~ ^[0-9]+$ ]] || PR_NUM=1
            NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}-$PR_LABEL.$((PR_NUM + 1))"
          fi

          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          sed -i "s|<Version>.*</Version>|<Version>$NEW_VERSION</Version>|" src/EFCore.CrudKit.Library/EFCore.CrudKit.Library.csproj

      - name: Commit and push bump
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -B version-bump
          git add src/EFCore.CrudKit.Library/EFCore.CrudKit.Library.csproj
          git commit -m "Bump version to $NEW_VERSION [skip ci]" || echo "No changes to commit"
          git push origin version-bump --force

      - name: Create Pull Request to master
        uses: peter-evans/create-pull-request@v6
        with:
            token: ${{ secrets.PAT_TOKEN }}
            base: master
            branch: version-bump
            title: "Version bump to ${{ env.NEW_VERSION }}"
            body: "Automated version bump from development branch."
            draft: true
            delete-branch: false